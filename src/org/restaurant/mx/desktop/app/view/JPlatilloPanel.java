package org.restaurant.mx.desktop.app.view;

import org.restaurant.mx.controladores.ControladorCategoriaPlatillo;
import org.restaurant.mx.controladores.ControladorPlatillo;
import org.restaurant.mx.modelo.CategoriaExt;
import org.restaurant.mx.modelo.CategoriaPlatillo;
import org.restaurant.mx.modelo.Platillo;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;
import org.developercircle.base.ui.IAccessibleMDI;
import org.developercircle.base.ui.mdi.AbstractPanelView;
import org.developercircle.base.ui.mdi.JAbstractMDI;

/**
 *
 * @author JAST
 */
public class JPlatilloPanel extends AbstractPanelView {

    private IAccessibleMDI app;
    private DefaultListModel dlm;
    private DefaultComboBoxModel dcbm;
    private ControladorPlatillo conPla;
    private ControladorCategoriaPlatillo conCatPla;

    public JPlatilloPanel(JAbstractMDI app) {
        initComponents();
        this.app = app;
    }

    private void init() {
        conPla = new ControladorPlatillo();
        conCatPla = new ControladorCategoriaPlatillo();
        cargarPlatillos();
        cargarCategorias();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        cboCategoria = new javax.swing.JComboBox();
        btnGuardar = new javax.swing.JButton();
        jtfDescripcion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstPlatillos = new javax.swing.JList();
        btnNuevo = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jspPrecio = new javax.swing.JSpinner();

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Categoria:");

        cboCategoria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboCategoria.setToolTipText("");
        cboCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCategoriaActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/accept.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jtfDescripcion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Descripci√≥n:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Precio:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Platillos");

        lstPlatillos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstPlatillosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstPlatillos);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/add.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/accept_page.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/img/delete.png"))); // NOI18N
        jButton1.setText("Eliminar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jspPrecio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jspPrecio.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(1.0d), Double.valueOf(1.0d), null, Double.valueOf(1.0d)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                    .addComponent(cboCategoria, 0, 1, Short.MAX_VALUE)
                                    .addComponent(jspPrecio))
                                .addGap(73, 73, 73))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGuardar)
                                .addContainerGap(83, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jtfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jspPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevo)
                            .addComponent(btnGuardar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)
                        .addGap(0, 103, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCategoriaActionPerformed
        // TOD9O add your handling code here:
    }//GEN-LAST:event_cboCategoriaActionPerformed

//    private void seleccionarPrimer() {
//        if (dlm.size() != 0) {
//            lstPlatillos.setSelectedIndex(0);
////            lstUsuariosMouseClicked(null);
//        }
//    }
    private void cargarPlatillos() {
        dlm = new DefaultListModel();
        List<Platillo> plats = new ArrayList<Platillo>();
        plats = conPla.listar();
        for (Platillo p : plats) {
            dlm.addElement(p);
        }
        lstPlatillos.setModel(dlm);
    }

    private void cargarCategorias() {
        dcbm = new DefaultComboBoxModel();
        dcbm.addElement(null);
        List<CategoriaPlatillo> cats = conCatPla.listar();
        for (CategoriaPlatillo cp : cats) {
            CategoriaExt c = new CategoriaExt();
            c.setCategoriaPlatillo(cp);
            dcbm.addElement(c);
        }
        cboCategoria.setModel(dcbm);
    }

    private void limpiarCampos() {
        cboCategoria.setSelectedIndex(0);
        jtfDescripcion.setText(null);
        jspPrecio.setValue(new Double(1));
    }

    public boolean validarCampos() {
        boolean valido = false;
        try {
            if (!jtfDescripcion.equals("")
                    && ((Double)jspPrecio.getValue()> 0)
                    && cboCategoria.getSelectedIndex() != 0) {
                valido = true;
            }
        } catch (Exception e) {
            valido = false;
        }
        return valido;
    }

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        if (validarCampos()) {
            Platillo p = new Platillo();
            p.setDescripcion(jtfDescripcion.getText());
            p.setPrecio((Double)jspPrecio.getValue());
            CategoriaPlatillo cp = (CategoriaPlatillo) cboCategoria.getSelectedItem();
            p.setIdCatPlatillo(cp.getIdCategoria());
            p.setEliminado(false);

            if (conPla.agregar(p)) {
                JOptionPane.showMessageDialog(this, "El platillo se logr√≥ guardar con √©xito",
                        "√âxito",
                        JOptionPane.INFORMATION_MESSAGE);
                limpiarCampos();
                cargarPlatillos();
            } else {
                JOptionPane.showMessageDialog(this, "Se ha generado un error interno al guardar el platillo.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);

            }
        } else {
            JOptionPane.showMessageDialog(this, "No es posible guardar porque algunos de los campos se cuentra vac√≠os.",
                    "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void lstPlatillosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstPlatillosMouseClicked
        cargarCategorias();
        Platillo p = (Platillo) lstPlatillos.getSelectedValue();
        if (p != null) {
            limpiarCampos();
            jtfDescripcion.setText(p.getDescripcion());
            jspPrecio.setValue((Double)p.getPrecio());
            CategoriaPlatillo cpTemp;
            int index = 0;
            int tamCats = cboCategoria.getModel().getSize();

            for (int i = 1; i < tamCats; i++) {
                cpTemp = (CategoriaPlatillo) cboCategoria.getModel().getElementAt(i);
                if (cpTemp.getIdCategoria().equals(p.getIdCatPlatillo())) {
                    index = i;
                    break;
                }
            }
            cboCategoria.setSelectedIndex(index);
        }
    }//GEN-LAST:event_lstPlatillosMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        btnGuardar.setEnabled(true);
        limpiarCampos();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        Platillo p = (Platillo) lstPlatillos.getSelectedValue();
        if (validarCampos()) {
            p.setDescripcion(jtfDescripcion.getText());
            p.setPrecio((Double)jspPrecio.getValue());
            p.setIdCatPlatillo(((CategoriaPlatillo) cboCategoria.getSelectedItem()).getIdCategoria());
            if (conPla.actualizar(p)) {
                JOptionPane.showMessageDialog(this, "El platillo se logr√≥ actualizar con √©xito.",
                        "√âxito",
                        JOptionPane.INFORMATION_MESSAGE);
                limpiarCampos();
                cargarPlatillos();
            } else {
                JOptionPane.showMessageDialog(this, "Se ha generado un error interno al actualizar el platillo.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);

            }
        } else {
            JOptionPane.showMessageDialog(this, "No es posible actualizar porque algunos de los campos se cuentra vac√≠os.",
                    "Advertencia",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Platillo p = (Platillo) lstPlatillos.getSelectedValue();
        p.setEliminado(true);
        if (conPla.actualizar(p)) {
            JOptionPane.showMessageDialog(this, "El platillo se logr√≥ eliminar con √©xito.",
                    "√âxito",
                    JOptionPane.INFORMATION_MESSAGE);
            cargarPlatillos();
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Se ha generado un error interno al eliminar el platillo.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox cboCategoria;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jspPrecio;
    private javax.swing.JTextField jtfDescripcion;
    private javax.swing.JList lstPlatillos;
    // End of variables declaration//GEN-END:variables

    @Override
    public void activate() {
        init();
    }
}
